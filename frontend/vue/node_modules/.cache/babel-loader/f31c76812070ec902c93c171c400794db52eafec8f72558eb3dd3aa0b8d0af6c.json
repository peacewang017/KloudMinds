{"ast":null,"code":"export default {\n  name: \"Trash\",\n  props: {\n    typeList: null\n  },\n  data() {\n    return {\n      tableData: []\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    restore(fileId) {\n      this.$request.put('/diskFiles/restore/' + fileId).then(res => {\n        if (res.code === '200') {\n          // 表示操作成功\n          this.$message.success('操作成功');\n          this.load();\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n\n    del(fileId) {\n      // 单个删除\n      this.$confirm('Are you sure to delete？', 'Confirm to delete', {\n        type: \"warning\",\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel'\n      }).then(response => {\n        this.$request.delete('/diskFiles/delete/' + fileId).then(res => {\n          // 这里传的是 trash的id  要传file_id\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('Operation succeeded');\n            this.load();\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.fileId); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('Please select the file first！');\n        return;\n      }\n      this.$confirm('Are you sure to delete these files in bulk?？', 'Confirm to delete', {\n        type: \"warning\",\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel'\n      }).then(response => {\n        this.$request.delete('/diskFiles/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('Operation succeeded');\n            this.load();\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load() {\n      this.$request.get('/diskFiles/selectTrash').then(res => {\n        this.tableData = res.data || [];\n      });\n    },\n    mouseEnter(row) {\n      this.$set(row, 'optShow', true);\n    },\n    mouseLeave(row) {\n      this.$set(row, 'optShow', false);\n    }\n  }\n};","map":{"version":3,"names":["name","props","typeList","data","tableData","created","load","methods","restore","fileId","$request","put","then","res","code","$message","success","error","msg","del","$confirm","type","confirmButtonText","cancelButtonText","response","delete","catch","handleSelectionChange","rows","ids","map","v","delBatch","length","warning","get","mouseEnter","row","$set","mouseLeave"],"sources":["src/components/Trash.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"padding: 15px; border-bottom: 1px solid #ddd\">\r\n      <el-button type=\"danger\" class=\"mydel\" plain @click=\"delBatch\">Batch delete</el-button>\r\n    </div>\r\n    <el-table size=\"medium\" :data=\"tableData\" stripe @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n      <el-table-column label=\"File name\">\r\n        <template v-slot=\"scope\">\r\n          <div style=\"display: flex; cursor: pointer\"  @mouseenter=\"mouseEnter(scope.row)\" @mouseleave=\"mouseLeave(scope.row)\">\r\n            <div style=\"flex: 1\">\r\n              <i style=\"color: #409EFF\" :class=\"typeList.find(v => v.text === scope.row.type)?.icon || 'el-icon-file'\"></i>\r\n              <span v-if=\"!scope.row.unSave\" style=\"margin-left: 5px\">{{ scope.row.name }}</span>\r\n            </div>\r\n            <div style=\"color: #409EFF; font-size: 14px\" v-if=\"scope.row.optShow\">\r\n              <el-tooltip content=\"删除\" effect=\"light\" :open-delay=\"1000\">\r\n                <i class=\"el-icon-delete\" style=\"margin-right: 10px; cursor: pointer\" @click=\"del(scope.row.fileId)\"></i>\r\n              </el-tooltip>\r\n              <el-tooltip content=\"还原\" effect=\"light\" :open-delay=\"1000\">\r\n                <i class=\"el-icon-refresh\" style=\"margin-right: 10px; cursor: pointer\" @click=\"restore(scope.row.fileId)\"></i>\r\n              </el-tooltip>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"time\" label=\"Deleting time\" width=\"300\"></el-table-column>\r\n      <el-table-column prop=\"size\" label=\"File size（KB）\" width=\"300\"></el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Trash\",\r\n  props: {\r\n    typeList: null\r\n  },\r\n  data() {\r\n    return {\r\n      tableData: []\r\n    }\r\n  },\r\n  created() {\r\n    this.load()\r\n  },\r\n  methods: {\r\n    restore(fileId) {\r\n      this.$request.put('/diskFiles/restore/' + fileId).then(res => {\r\n        if (res.code === '200') {   // 表示操作成功\r\n          this.$message.success('操作成功')\r\n          this.load()\r\n        } else {\r\n          this.$message.error(res.msg)  // 弹出错误的信息\r\n        }\r\n      })\r\n    },\r\n    del(fileId) {   // 单个删除\r\n      this.$confirm('Are you sure to delete？', 'Confirm to delete', {type: \"warning\",confirmButtonText: 'Confirm',cancelButtonText: 'Cancel'}).then(response => {\r\n        this.$request.delete('/diskFiles/delete/' + fileId).then(res => {  // 这里传的是 trash的id  要传file_id\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('Operation succeeded')\r\n            this.load()\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.fileId)   //  [1,2]\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('Please select the file first！')\r\n        return\r\n      }\r\n      this.$confirm('Are you sure to delete these files in bulk?？', 'Confirm to delete', {type: \"warning\",confirmButtonText: 'Confirm',cancelButtonText: 'Cancel'}).then(response => {\r\n        this.$request.delete('/diskFiles/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('Operation succeeded')\r\n            this.load()\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load() {\r\n      this.$request.get('/diskFiles/selectTrash').then(res => {\r\n        this.tableData = res.data || []\r\n      })\r\n    },\r\n    mouseEnter(row) {\r\n      this.$set(row, 'optShow', true)\r\n    },\r\n    mouseLeave(row) {\r\n      this.$set(row, 'optShow', false)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.mydel {\r\n  background-color: #fedb9c; /* 背景颜色 */\r\n  color: #fc8811; /* 文字颜色 */\r\n  border: 1px solid #fc8811; /* 添加黑色边框，边框宽度为1px */\r\n  border-radius: 30px; /* 圆角大小 */\r\n  padding: 10px 17px; /* 减小内边距 */\r\n  font-size: 12px; /* 减小字体大小 */\r\n  transition: all 0.3s; /* 过渡效果 */\r\n  margin-left: 20px; /* 向右移动20px */\r\n}\r\n\r\n.mydel:hover {\r\n  background-color:#fc8811; /* 鼠标悬停时的背景颜色，保持不变 */\r\n  color: #fedb9c; /* 鼠标悬停时的文字颜色，保持不变 */\r\n  opacity: 0.9; /* 鼠标悬停时的透明度，增加层次感 */\r\n}\r\n</style>"],"mappings":"AAgCA;EACAA,IAAA;EACAC,KAAA;IACAC,QAAA;EACA;EACAC,KAAA;IACA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAC,QAAAC,MAAA;MACA,KAAAC,QAAA,CAAAC,GAAA,yBAAAF,MAAA,EAAAG,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA,KAAAV,IAAA;QACA;UACA,KAAAS,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;QACA;MACA;IACA;;IACAC,IAAAV,MAAA;MAAA;MACA,KAAAW,QAAA;QAAAC,IAAA;QAAAC,iBAAA;QAAAC,gBAAA;MAAA,GAAAX,IAAA,CAAAY,QAAA;QACA,KAAAd,QAAA,CAAAe,MAAA,wBAAAhB,MAAA,EAAAG,IAAA,CAAAC,GAAA;UAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAV,IAAA;UACA;YACA,KAAAS,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAQ,KAAA,QACA;IACA;IACAC,sBAAAC,IAAA;MAAA;MACA,KAAAC,GAAA,GAAAD,IAAA,CAAAE,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAtB,MAAA;IACA;;IACAuB,SAAA;MAAA;MACA,UAAAH,GAAA,CAAAI,MAAA;QACA,KAAAlB,QAAA,CAAAmB,OAAA;QACA;MACA;MACA,KAAAd,QAAA;QAAAC,IAAA;QAAAC,iBAAA;QAAAC,gBAAA;MAAA,GAAAX,IAAA,CAAAY,QAAA;QACA,KAAAd,QAAA,CAAAe,MAAA;UAAAtB,IAAA,OAAA0B;QAAA,GAAAjB,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAV,IAAA;UACA;YACA,KAAAS,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAQ,KAAA,QACA;IACA;IACApB,KAAA;MACA,KAAAI,QAAA,CAAAyB,GAAA,2BAAAvB,IAAA,CAAAC,GAAA;QACA,KAAAT,SAAA,GAAAS,GAAA,CAAAV,IAAA;MACA;IACA;IACAiC,WAAAC,GAAA;MACA,KAAAC,IAAA,CAAAD,GAAA;IACA;IACAE,WAAAF,GAAA;MACA,KAAAC,IAAA,CAAAD,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}