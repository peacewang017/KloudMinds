{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nexport default {\n  name: \"Main\",\n  props: {\n    typeList: null\n  },\n  data() {\n    return {\n      msgForm: {\n        msg: null\n      },\n      title: 'notice',\n      msgDialog: false,\n      category: this.$route.query.category,\n      // 分类\n      folderId: this.$route.query.folderId,\n      // folderId\n      tableData: [],\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      uploadUrl: '',\n      ids: [],\n      resultDialog: false,\n      folders: [],\n      currentRows: [],\n      aiResult: null,\n      shareVisible: false,\n      form: {},\n      shareLink: '',\n      name: null,\n      aiOptions: 1,\n      // AI功能选项\n      aiFormVisible: false,\n      // 控制AI功能表单的显示\n      iconHover: false // 用于控制图标放大的状态\n    };\n  },\n\n  created() {\n    this.load();\n    this.uploadUrl = this.$baseUrl + '/diskFiles/add?folder=否';\n    if (this.folderId) {\n      // 如果不这么判断  就会传 undefined到后台 就会报错\n      this.uploadUrl += '&folderId=' + this.folderId;\n    }\n  },\n  methods: {\n    saveShare() {\n      if (this.shareLink) {\n        this.shareVisible = false;\n        return;\n      }\n      this.$request.post('/diskFiles/share/', this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"Operation succeeded\");\n          let shareData = res.data;\n          let currentUrl = location.href.substring(0, location.href.indexOf('/front'));\n          this.shareLink = currentUrl + '/front/openShare?code=' + shareData.code + '&shareId=' + shareData.id;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleCommand(val) {\n      if (this.currentRows.length === 0) {\n        this.$message.error('Please choose the document first!');\n        return;\n      }\n      if (val === '1') {\n        this.title = 'Document Summary';\n        let temp = this.currentRows.map(item => item.name).join(',');\n        this.$request.get(`/aiChat/doc/${temp}`).then(res => {\n          this.aiResult = res;\n          this.resultDialog = true;\n        });\n      } else if (val === '2') {\n        this.msgDialog = true;\n      }\n    },\n    handleSubmit() {\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          this.msgDialog = false;\n          this.title = this.msgForm.msg;\n          let temp = this.currentRows.map(item => item.name).join(',');\n          this.$request.get(`/aiChat/chat/${temp}?msg=${this.msgForm.msg}`).then(res => {\n            this.aiResult = res;\n            this.msgForm.msg = null;\n            this.resultDialog = true;\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    share(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.form.days = 3;\n      this.shareLink = '';\n      this.shareVisible = true;\n    },\n    copy(row) {\n      this.$request.post('/diskFiles/copy/' + row.id).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"Operation succeeded\");\n          this.load();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    openFile(row) {\n      if (row.folder === '是') {\n        // 文件夹\n        location.href = '/front/home?category=' + this.category + '&folderId=' + row.id;\n      } else {\n        window.open(this.$baseUrl + '/diskFiles/preview/' + row.id);\n      }\n    },\n    search(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/diskFiles/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    download(row) {\n      //如果后端改好的话\n      this.$request.get('/diskFiles/download/' + row.name).then(res => {\n        window.open(res);\n      });\n    },\n    mouseEnter(row) {\n      if (!row.unSave) {\n        this.$set(row, 'optShow', true);\n      }\n    },\n    mouseLeave(row) {\n      if (!row.unSave) {\n        this.$set(row, 'optShow', false);\n      }\n    },\n    rename(row) {\n      this.$set(row, 'unSave', true);\n    },\n    save(row) {\n      // 上传文件夹的方法 和编辑后保存\n      if (row.id) {\n        // 编辑\n        this.$request.put('/diskFiles/update', row).then(res => {\n          if (res.code === '200') {\n            this.$message.success(\"Operation succeeded\");\n            this.load();\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      } else {\n        let url = '/diskFiles/add?folder=是&name=' + row.name;\n        if (this.folderId) {\n          // 外层的folderId\n          url += '&folderId=' + this.folderId;\n        }\n        this.$request.post(url).then(res => {\n          if (res.code === '200') {\n            this.$message.success(\"Operation succeeded\");\n            this.load();\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      }\n    },\n    cancel(row) {\n      let index = row.$index;\n      if (row.id) {\n        // 编辑\n        this.load(); // 加载最新的数据即可\n      } else {\n        // 新增\n        this.tableData.splice(index, 1);\n      }\n    },\n    addFolder() {\n      this.tableData.unshift({\n        name: '',\n        type: 'folder',\n        unSave: true,\n        folderId: this.folderId || null\n      }); //  unSave 控制输入框是否显示\n    },\n\n    load() {\n      this.$request.get('/diskFiles/selectAll', {\n        params: {\n          category: this.category || null,\n          // all  img  video  zip\n          folderId: this.folderId || null\n        }\n      }).then(res => {\n        this.tableData = res.data || [];\n        this.tableData.forEach(item => {\n          this.$set(item, 'optShow', false); // 强制设置每行  加一个 optShow属性\n        });\n      });\n\n      this.$request.get('/diskFiles/selectFolders', {\n        params: {\n          folderId: this.folderId || null\n        }\n      }).then(res => {\n        this.folders = res.data || [];\n      });\n    },\n    handleFileSuccess(res) {\n      if (res.code === '200') {\n        this.$message.success(\"File uploaded successfully  ^w^\");\n        this.load();\n      } else {\n        this.$message.error('File upload failed  QwQ');\n      }\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('Are you sure to delete？', 'Confirm to delete', {\n        type: \"warning\",\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel'\n      }).then(response => {\n        this.$request.delete('/diskFiles/trash/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('Operation succeeded');\n            this.load();\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.currentRows = rows;\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('Please select the file first！');\n        return;\n      }\n      this.$confirm('Are you sure to delete these files in bulk?', 'Confirm to delete', {\n        type: \"warning\",\n        confirmButtonText: 'Confirm',\n        cancelButtonText: 'Cancel'\n      }).then(response => {\n        this.$request.delete('/diskFiles/trash/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('Operation succeeded');\n            this.load();\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    copyLink(link) {\n      let _input = document.createElement(\"input\"); // 直接构建input\n      _input.value = link; // 设置内容\n      document.body.appendChild(_input); // 添加临时实例\n      _input.select(); // 选择实例内容\n      document.execCommand(\"Copy\"); // 执行复制\n      document.body.removeChild(_input);\n      this.$message.success(\"Copy success\");\n    }\n  }\n};","map":{"version":3,"names":["name","props","typeList","data","msgForm","msg","title","msgDialog","category","$route","query","folderId","tableData","user","JSON","parse","localStorage","getItem","uploadUrl","ids","resultDialog","folders","currentRows","aiResult","shareVisible","form","shareLink","aiOptions","aiFormVisible","iconHover","created","load","$baseUrl","methods","saveShare","$request","post","then","res","code","$message","success","shareData","currentUrl","location","href","substring","indexOf","id","error","handleCommand","val","length","temp","map","item","join","get","handleSubmit","$refs","ruleForm","validate","valid","console","log","share","row","stringify","days","copy","openFile","folder","window","open","search","pageNum","params","pageSize","list","total","download","mouseEnter","unSave","$set","mouseLeave","rename","save","put","url","cancel","index","$index","splice","addFolder","unshift","type","forEach","handleFileSuccess","del","$confirm","confirmButtonText","cancelButtonText","response","delete","catch","handleSelectionChange","rows","v","delBatch","warning","copyLink","link","_input","document","createElement","value","body","appendChild","select","execCommand","removeChild"],"sources":["src/components/Main.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"category === 'all' || category === 'img' || category === 'video'|| category === 'zip'\" >\r\n    <div style=\"padding: 15px; border-bottom: 1px solid #ddd;position: relative\">\r\n      <el-upload\r\n          style=\"display: inline-block; margin-right: 10px\"\r\n          :action=\"uploadUrl\"\r\n          :headers=\"{ token: user.token }\"\r\n          :show-file-list=\"false\"\r\n          :on-success=\"handleFileSuccess\"\r\n      >\r\n        <el-button class=\"myupload\">Upload files</el-button>\r\n      </el-upload>\r\n      <el-button type=\"primary\" plain @click=\"addFolder\" class=\"mynewfold\">New folder</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\"  class=\"mydel\">Batch delete</el-button>\r\n      <el-input class=\"search\"\r\n                v-model=\"name\"\r\n                placeholder=\"Please enter to search\"\r\n                style=\"margin-left: 50px; width: 200px;\"\r\n                :prefix-icon=\"'el-icon-search'\"\r\n                @mouseenter=\"iconHover = true\"\r\n                @mouseleave=\"iconHover = false\">\r\n      </el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"search(1)\" round>\r\n        <i class=\"el-icon-right\"></i>\r\n      </el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\" round>\r\n        <i class=\"el-icon-refresh-right\"></i>\r\n      </el-button>\r\n      <el-dropdown split-button type=\"primary\"  style=\"margin-left:60px\" @command=\"handleCommand\" v-if=\"category === 'all' || category === 'img' || category === 'video'|| category === 'zip'\">\r\n        AI functionality\r\n        <el-dropdown-menu slot=\"dropdown\">\r\n          <el-dropdown-item command=\"1\">AI Summary</el-dropdown-item>\r\n          <el-dropdown-item command=\"2\">AI Chat</el-dropdown-item>\r\n        </el-dropdown-menu>\r\n      </el-dropdown>\r\n    </div>\r\n\r\n    <!--<div style=\"padding: 15px\">\r\n      <a style=\"color: #666\" :href=\"'/front/home?category=' + category\">您的文件 <i class=\"el-icon-arrow-right\" v-if=\"folders.length\"></i></a>\r\n      <a style=\"color: #666\" :href=\"'/front/home?category=' + category + '&folderId=' + item.id\" v-for=\"(item, index) in folders\" :key=\"item.id\">\r\n        {{ item.name }} <i class=\"el-icon-arrow-right\" v-if=\"index !== folders.length - 1\"></i>\r\n      </a>\r\n    </div>-->\r\n\r\n    <div style=\"flex: 1; padding: 0 20px; overflow: hidden;\">\r\n      <div style=\"height: 500px; overflow-y: auto;\">\r\n      <el-table size=\"medium\" stripe :data=\"tableData\" @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column label=\"File Name\">\r\n          <template v-slot=\"scope\">\r\n            <div v-if=\"scope.row.unSave\" >\r\n              <i style=\"color: #409EFF\" :class=\"typeList.find(v => v.text === scope.row.type)?.icon || 'el-icon-file'\"></i>\r\n              <el-input size=\"mini\" style=\"width: 300px; margin: 0 5px\" v-model=\"scope.row.name\"></el-input>\r\n              <el-button type=\"primary\" size=\"mini\" @click=\"save(scope.row)\">determine</el-button>\r\n              <el-button type=\"danger\" size=\"mini\" @click=\"cancel(scope.row)\">cancel</el-button>\r\n            </div>\r\n\r\n            <div style=\"display: flex; cursor: pointer\" @click=\"openFile(scope.row)\" v-else @mouseenter=\"mouseEnter(scope.row)\" @mouseleave=\"mouseLeave(scope.row)\">\r\n              <div style=\"flex: 1\">\r\n                <i style=\"color: #409EFF\" :class=\"typeList.find(v => v.text === scope.row.type)?.icon || 'el-icon-file'\"></i>\r\n                <span v-if=\"!scope.row.unSave\" style=\"margin-left: 5px\">{{ scope.row.name }}</span>\r\n              </div>\r\n              <div style=\"color: #409EFF; font-size: 14px\" v-if=\"scope.row.optShow\">\r\n                <el-tooltip content=\"Share\" effect=\"light\" :open-delay=\"1000\">\r\n                  <i class=\"el-icon-share\" style=\"margin-right: 10px; cursor: pointer\" @click.stop=\"share(scope.row)\"></i>\r\n                </el-tooltip>\r\n                <el-tooltip content=\"Download\" effect=\"light\" :open-delay=\"1000\" v-if=\"scope.row.folder === '否'\">\r\n                  <i class=\"el-icon-download\" style=\"margin-right: 10px; cursor: pointer\" @click.stop=\"download(scope.row)\"></i>\r\n                </el-tooltip>\r\n                <el-tooltip content=\"Delete\" effect=\"light\" :open-delay=\"1000\">\r\n                  <i class=\"el-icon-delete\" style=\"margin-right: 10px; cursor: pointer\" @click.stop=\"del(scope.row.id)\"></i>\r\n                </el-tooltip>\r\n                <el-tooltip content=\"Rename\" effect=\"light\" :open-delay=\"1000\">\r\n                  <i class=\"el-icon-rename\" style=\"margin-right: 10px; cursor: pointer\" @click.stop=\"rename(scope.row)\"></i>\r\n                </el-tooltip>\r\n                <el-tooltip content=\"Copy\" effect=\"light\" :open-delay=\"1000\">\r\n                  <i class=\"el-icon-document-copy\" style=\"cursor: pointer\" @click.stop=\"copy(scope.row)\"></i>\r\n                </el-tooltip>\r\n              </div>\r\n\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column prop=\"updateTime\" label=\"Changing Time\" width=\"300\"></el-table-column>\r\n        <el-table-column prop=\"size\" label=\"File Size（KB）\" width=\"300\"></el-table-column>\r\n      </el-table>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <el-dialog title=\"SHARE\" :visible.sync=\"shareVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form label-width=\"150px\" style=\"padding-right: 50px\" :model=\"form\">\r\n        <el-form-item label=\"Sharing Days\">\r\n          <el-radio-group v-model=\"form.days\">\r\n            <el-radio :label=\"3\">3 days</el-radio>\r\n            <el-radio :label=\"7\">7 days</el-radio>\r\n            <el-radio :label=\"30\">30 days</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"Share link\" v-if=\"shareLink\">\r\n          <div style=\"display: flex\">\r\n            <el-input style=\"flex: 1\" v-model=\"shareLink\"></el-input>\r\n            <el-button style=\"margin-left: 10px\" type=\"primary\" @click=\"copyLink(shareLink)\">Copy it!</el-button>\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"shareVisible = false\">CANCEL</el-button>\r\n        <el-button type=\"primary\" @click=\"saveShare\">CONFIRM</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog\r\n        :title=\"title\"\r\n        :visible.sync=\"resultDialog\"\r\n        width=\"30%\">\r\n      <span>{{aiResult}}</span>\r\n    </el-dialog>\r\n    <div style=\"background-color: #709bc8;\">\r\n    <el-dialog\r\n        title=\"AI Chat\"\r\n        :visible.sync=\"msgDialog\"\r\n        width=\"30%\"\r\n        style=\"font-size: 20px; font-weight: 400; font-family: 'Proxima Nova', sans-serif;\">\r\n      <div style=\"background-color: #709bc8;box-shadow: 0 0 20px 0 #709bc8;\">\r\n        <el-form :model=\"msgForm\" ref=\"ruleForm\" class=\"demo-ruleForm\">\r\n          <el-form-item :rules=\"[{ required: true, message: '请输入信息', trigger: 'blur' }]\" prop=\"msg\">\r\n            <el-input\r\n                type=\"textarea\"\r\n                :rows=\"5\"\r\n                placeholder=\"Please enter your question\"\r\n                v-model=\"msgForm.msg\">\r\n            </el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"msgDialog = false\">CANCEL</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">CONFIRM</el-button>\r\n      </span>\r\n    </el-dialog>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Main\",\r\n  props: {\r\n    typeList: null\r\n  },\r\n  data() {\r\n    return {\r\n      msgForm:{\r\n        msg:null\r\n      },\r\n      title:'notice',\r\n      msgDialog:false,\r\n      category: this.$route.query.category,  // 分类\r\n      folderId: this.$route.query.folderId,  // folderId\r\n      tableData: [],\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      uploadUrl: '',\r\n      ids: [],\r\n      resultDialog:false,\r\n      folders: [],\r\n      currentRows:[],\r\n      aiResult:null,\r\n      shareVisible: false,\r\n      form: {},\r\n      shareLink: '',\r\n      name: null,\r\n      aiOptions: 1, // AI功能选项\r\n      aiFormVisible: false, // 控制AI功能表单的显示\r\n      iconHover: false, // 用于控制图标放大的状态\r\n    }\r\n  },\r\n  created() {\r\n    this.load()\r\n\r\n    this.uploadUrl = this.$baseUrl + '/diskFiles/add?folder=否'\r\n    if (this.folderId) {  // 如果不这么判断  就会传 undefined到后台 就会报错\r\n      this.uploadUrl += '&folderId=' + this.folderId\r\n    }\r\n  },\r\n  methods: {\r\n    saveShare() {\r\n      if (this.shareLink) {\r\n        this.shareVisible = false\r\n        return\r\n      }\r\n      this.$request.post('/diskFiles/share/', this.form).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success(\"Operation succeeded\")\r\n\r\n          let shareData = res.data\r\n          let currentUrl = location.href.substring(0, location.href.indexOf('/front'))\r\n          this.shareLink = currentUrl + '/front/openShare?code=' + shareData.code + '&shareId=' + shareData.id\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    handleCommand(val) {\r\n      if(this.currentRows.length === 0){\r\n        this.$message.error('Please choose the document first!')\r\n        return;\r\n      }\r\n      if(val === '1'){\r\n        this.title = 'Document Summary'\r\n        let temp = this.currentRows.map(item=>item.name).join(',')\r\n        this.$request.get(`/aiChat/doc/${temp}`).then(res=>{\r\n          this.aiResult = res;\r\n          this.resultDialog = true;\r\n        })\r\n      }else if( val === '2'){\r\n        this.msgDialog = true;\r\n      }\r\n    },\r\n    handleSubmit(){\r\n      this.$refs.ruleForm.validate((valid) => {\r\n        if (valid) {\r\n          this.msgDialog = false;\r\n          this.title = this.msgForm.msg;\r\n          let temp = this.currentRows.map(item=>item.name).join(',')\r\n          this.$request.get(`/aiChat/chat/${temp}?msg=${this.msgForm.msg}`).then(res=>{\r\n            this.aiResult = res;\r\n            this.msgForm.msg = null;\r\n            this.resultDialog = true;\r\n          })\r\n        } else {\r\n          console.log('error submit!!');\r\n          return false;\r\n        }\r\n      });\r\n\r\n    },\r\n    share(row) {\r\n      this.form = JSON.parse(JSON.stringify(row))\r\n      this.form.days = 3\r\n      this.shareLink = ''\r\n      this.shareVisible = true\r\n    },\r\n    copy(row) {\r\n      this.$request.post('/diskFiles/copy/' + row.id).then(res => {\r\n        if (res.code === '200') {\r\n          this.$message.success(\"Operation succeeded\")\r\n          this.load()\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    openFile(row) {\r\n      if (row.folder === '是') { // 文件夹\r\n        location.href = '/front/home?category=' + this.category + '&folderId=' + row.id\r\n      } else {\r\n        window.open(this.$baseUrl + '/diskFiles/preview/' + row.id)\r\n      }\r\n    },\r\n    search(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/diskFiles/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          name: this.name,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    download(row) {\r\n      //如果后端改好的话\r\n      this.$request.get('/diskFiles/download/' + row.name).then(res => {\r\n        window.open(res)\r\n      })\r\n    },\r\n    mouseEnter(row) {\r\n      if (!row.unSave) {\r\n        this.$set(row, 'optShow', true)\r\n      }\r\n    },\r\n    mouseLeave(row) {\r\n      if (!row.unSave) {\r\n        this.$set(row, 'optShow', false)\r\n      }\r\n    },\r\n    rename(row) {\r\n      this.$set(row, 'unSave', true)\r\n    },\r\n    save(row) {  // 上传文件夹的方法 和编辑后保存\r\n      if (row.id) {  // 编辑\r\n        this.$request.put('/diskFiles/update', row).then(res => {\r\n          if (res.code === '200') {\r\n            this.$message.success(\"Operation succeeded\")\r\n            this.load()\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      } else {\r\n        let url = '/diskFiles/add?folder=是&name=' + row.name\r\n        if (this.folderId) {  // 外层的folderId\r\n          url += '&folderId=' + this.folderId\r\n        }\r\n        this.$request.post(url).then(res => {\r\n          if (res.code === '200') {\r\n            this.$message.success(\"Operation succeeded\")\r\n            this.load()\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      }\r\n\r\n    },\r\n    cancel(row) {\r\n      let index = row.$index\r\n      if (row.id) {  // 编辑\r\n        this.load() // 加载最新的数据即可\r\n      } else {  // 新增\r\n        this.tableData.splice(index, 1)\r\n      }\r\n\r\n    },\r\n    addFolder() {\r\n      this.tableData.unshift({  name: '', type: 'folder', unSave: true, folderId: this.folderId || null })    //  unSave 控制输入框是否显示\r\n    },\r\n    load() {\r\n      this.$request.get('/diskFiles/selectAll', {\r\n        params: {\r\n          category: this.category || null,   // all  img  video  zip\r\n          folderId: this.folderId || null\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data || []\r\n        this.tableData.forEach(item => {\r\n          this.$set(item, 'optShow', false)   // 强制设置每行  加一个 optShow属性\r\n        })\r\n      })\r\n\r\n      this.$request.get('/diskFiles/selectFolders', {\r\n        params: { folderId: this.folderId || null }\r\n      }).then(res => {\r\n        this.folders = res.data || []\r\n      })\r\n    },\r\n    handleFileSuccess(res) {\r\n      if (res.code === '200') {\r\n        this.$message.success(\"File uploaded successfully  ^w^\")\r\n        this.load()\r\n      } else {\r\n        this.$message.error('File upload failed  QwQ')\r\n      }\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('Are you sure to delete？', 'Confirm to delete', {type: \"warning\",confirmButtonText: 'Confirm',cancelButtonText: 'Cancel'}).then(response => {\r\n        this.$request.delete('/diskFiles/trash/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('Operation succeeded')\r\n            this.load()\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.currentRows  = rows;\r\n      this.ids = rows.map(v => v.id)   //  [1,2]\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('Please select the file first！')\r\n        return\r\n      }\r\n      this.$confirm('Are you sure to delete these files in bulk?', 'Confirm to delete', {type: \"warning\",confirmButtonText: 'Confirm',cancelButtonText: 'Cancel'}).then(response => {\r\n        this.$request.delete('/diskFiles/trash/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('Operation succeeded')\r\n            this.load()\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    copyLink(link) {\r\n      let _input = document.createElement(\"input\");   // 直接构建input\r\n      _input.value = link;  // 设置内容\r\n      document.body.appendChild(_input);    // 添加临时实例\r\n      _input.select();   // 选择实例内容\r\n      document.execCommand(\"Copy\");   // 执行复制\r\n      document.body.removeChild(_input)\r\n      this.$message.success(\"Copy success\")\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/deep/.el-form-item__label {\r\n  padding-right: 50px !important;\r\n}\r\n.el-dropdown {\r\n  vertical-align: top;\r\n}\r\n.el-dropdown + .el-dropdown {\r\n  margin-left: 15px;\r\n}\r\n.el-icon-arrow-down {\r\n  font-size: 12px;\r\n}\r\n.myupload {\r\n  background-color: #EBEDDF; /* 背景颜色 */\r\n  color: #709bc8; /* 文字颜色 */\r\n  border: 1px solid #709bc8; /* 添加边框，边框宽度为1px */\r\n  border-radius: 4px; /* 圆角大小 */\r\n  padding: 10px 17px; /* 减小内边距 */\r\n  font-size: 12px; /* 减小字体大小 */\r\n  transition: all 0.3s; /* 过渡效果 */\r\n}\r\n\r\n/*上传文件悬停样式*/\r\n.myupload:hover {\r\n  background-color: #709bc8; /* 鼠标悬停时的背景颜色，保持不变 */\r\n  color: #EBEDDF; /* 鼠标悬停时的文字颜色，保持不变 */\r\n  opacity: 0.9; /* 鼠标悬停时的透明度，增加层次感 */\r\n}\r\n.mynewfold {\r\n  background-color: #709bc8; /* 背景颜色 */\r\n  color: #EBEDDF; /* 文字颜色 */\r\n  border: 1px solid #EBEDDF; /* 添加黑色边框，边框宽度为1px */\r\n  border-radius: 4px; /* 圆角大小 */\r\n  padding: 10px 17px; /* 减小内边距 */\r\n  font-size: 12px; /* 减小字体大小 */\r\n  transition: all 0.3s; /* 过渡效果 */\r\n  margin-left: 10px; /* 向右移动20px */\r\n}\r\n\r\n/*上传文件悬停样式*/\r\n.mynewfold:hover {\r\n  background-color: #EBEDDF; /* 鼠标悬停时的背景颜色，保持不变 */\r\n  color: #709bc8; /* 鼠标悬停时的文字颜色，保持不变 */\r\n  opacity: 0.9; /* 鼠标悬停时的透明度，增加层次感 */\r\n}\r\n.mydel {\r\n  background-color: #fedb9c; /* 背景颜色 */\r\n  color: #fc8811; /* 文字颜色 */\r\n  border: 1px solid #fc8811; /* 添加黑色边框，边框宽度为1px */\r\n  border-radius: 30px; /* 圆角大小 */\r\n  padding: 10px 17px; /* 减小内边距 */\r\n  font-size: 12px; /* 减小字体大小 */\r\n  transition: all 0.3s; /* 过渡效果 */\r\n  margin-left: 20px; /* 向右移动20px */\r\n}\r\n\r\n.mydel:hover {\r\n  background-color:#fc8811; /* 鼠标悬停时的背景颜色，保持不变 */\r\n  color: #fedb9c; /* 鼠标悬停时的文字颜色，保持不变 */\r\n  opacity: 0.9; /* 鼠标悬停时的透明度，增加层次感 */\r\n}\r\n.el-input__icon.el-icon-search {\r\n  transition: transform 0.3s; /* 平滑过渡效果 */\r\n  transform: scale(1); /* 初始大小 */\r\n}\r\n\r\n/* 鼠标悬停时图标放大 */\r\n.el-input__icon.el-icon-search:hover {\r\n  transform: scale(1.3); /* 鼠标悬停时放大到130% */\r\n}\r\n\r\n/* 设置下拉菜单的样式 */\r\n.el-dropdown-menu {\r\n  background-color: #EBEDDF; /* 底色 */\r\n  color: #EBEDDF; /* 文字颜色 */\r\n}\r\n\r\n/* 设置下拉菜单项的悬停效果 */\r\n.el-dropdown-menu__item:hover {\r\n  background-color: #709bc8; /* 鼠标悬停时的底色 */\r\n  color: #EBEDDF; /* 鼠标悬停时的文字颜色 */\r\n}\r\n.el-table--striped .el-table__body .el-table__row:nth-child(odd) {\r\n  background-color: #add8e6; /* 浅蓝色 */\r\n}\r\n.el-table--striped .el-table__body .el-table__row:nth-child(even) {\r\n  background-color: #ffe4e1; /* 浅粉色 */\r\n}\r\n\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}