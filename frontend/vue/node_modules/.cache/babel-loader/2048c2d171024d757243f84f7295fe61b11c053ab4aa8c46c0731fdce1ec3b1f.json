{"ast":null,"code":"import Main from \"@/components/Main\";\nimport Trash from \"@/components/Trash\";\nimport Share from \"@/components/Share\";\nexport default {\n  components: {\n    Main,\n    Trash,\n    Share\n  },\n  data() {\n    return {\n      categoryList: [{\n        \"text\": '全部文件',\n        category: 'all',\n        icon: 'el-icon-picture-outline'\n      }, {\n        \"text\": '图片',\n        category: 'img',\n        icon: 'el-icon-picture-outline'\n      }, {\n        \"text\": '视频',\n        category: 'video',\n        icon: 'el-icon-video-play'\n      }, {\n        \"text\": '压缩',\n        category: 'zip',\n        icon: 'el-icon-box'\n      }],\n      typeList: [\n        // ... 类型列表数据 ...\n      ],\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      category: this.$route.query.category || 'all' // 默认分类为全部文件\n    };\n  },\n\n  computed: {\n    currentComponent() {\n      switch (this.category) {\n        case 'share':\n          return Share;\n        case 'trash':\n          return Trash;\n        default:\n          return Main;\n      }\n    }\n  },\n  methods: {\n    handleOpen(key, keyPath) {\n      console.log('handleOpen', key, keyPath);\n    },\n    handleClose(key, keyPath) {\n      console.log('handleClose', key, keyPath);\n    },\n    handleSelect(key, keyPath) {\n      console.log('handleSelect', key, keyPath);\n      this.category = key; // 更新当前分类\n      this.loadFiles(key);\n    },\n    loadFiles(category) {\n      // 这里应该是调用后端接口的逻辑，现在只是简单地更新 location\n      location.href = '/front/home?category=' + category;\n    }\n  }\n};","map":{"version":3,"names":["Main","Trash","Share","components","data","categoryList","category","icon","typeList","user","JSON","parse","localStorage","getItem","$route","query","computed","currentComponent","methods","handleOpen","key","keyPath","console","log","handleClose","handleSelect","loadFiles","location","href"],"sources":["src/views/front/Home.vue"],"sourcesContent":["<template>\r\n  <div style=\"display: flex; color: #666\">\r\n    <el-col :span=\"12\" style=\"border-right: 1px solid #ddd; min-height: calc(100vh - 86px)\">\r\n      <h5>自定义颜色</h5>\r\n      <el-menu\r\n          default-active=\"all\"\r\n          class=\"el-menu-vertical-demo\"\r\n          @open=\"handleOpen\"\r\n          @close=\"handleClose\"\r\n          @select=\"handleSelect\"\r\n          background-color=\"#545c64\"\r\n          text-color=\"#fff\"\r\n          active-text-color=\"#ffd04b\"\r\n      >\r\n        <!-- 全部文件的下拉列表 -->\r\n        <el-submenu index=\"all\">\r\n          <template slot=\"title\">\r\n            <i class=\"el-icon-picture-outline\"></i>\r\n            <span>全部文件</span>\r\n          </template>\r\n          <!-- 下拉列表的选项 -->\r\n          <el-menu-item index=\"img\">图片</el-menu-item>\r\n          <el-menu-item index=\"video\">视频</el-menu-item>\r\n          <el-menu-item index=\"zip\">压缩</el-menu-item>\r\n        </el-submenu>\r\n        <!-- 我的分享 -->\r\n        <el-menu-item index=\"share\">\r\n          <i class=\"el-icon-share\"></i>\r\n          <span slot=\"title\">我的分享</span>\r\n        </el-menu-item>\r\n        <!-- 回收站 -->\r\n        <el-menu-item index=\"trash\">\r\n          <i class=\"el-icon-delete\"></i>\r\n          <span slot=\"title\">回收站</span>\r\n        </el-menu-item>\r\n      </el-menu>\r\n    </el-col>\r\n    <div style=\"flex: 1\">\r\n      <!-- 根据 category 显示不同的组件 -->\r\n      <component :is=\"currentComponent\" :type-list=\"typeList\"></component>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Main from \"@/components/Main\";\r\nimport Trash from \"@/components/Trash\";\r\nimport Share from \"@/components/Share\";\r\n\r\nexport default {\r\n  components: {\r\n    Main,\r\n    Trash,\r\n    Share\r\n  },\r\n  data() {\r\n    return {\r\n      categoryList: [\r\n        {\"text\": '全部文件', category: 'all', icon: 'el-icon-picture-outline'},\r\n        {\"text\": '图片', category: 'img', icon: 'el-icon-picture-outline'},\r\n        {\"text\": '视频', category: 'video', icon: 'el-icon-video-play'},\r\n        {\"text\": '压缩', category: 'zip', icon: 'el-icon-box'},\r\n      ],\r\n      typeList: [\r\n        // ... 类型列表数据 ...\r\n      ],\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      category: this.$route.query.category || 'all',  // 默认分类为全部文件\r\n    };\r\n  },\r\n  computed: {\r\n    currentComponent() {\r\n      switch (this.category) {\r\n        case 'share':\r\n          return Share;\r\n        case 'trash':\r\n          return Trash;\r\n        default:\r\n          return Main;\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleOpen(key, keyPath) {\r\n      console.log('handleOpen', key, keyPath);\r\n    },\r\n    handleClose(key, keyPath) {\r\n      console.log('handleClose', key, keyPath);\r\n    },\r\n    handleSelect(key, keyPath) {\r\n      console.log('handleSelect', key, keyPath);\r\n      this.category = key; // 更新当前分类\r\n      this.loadFiles(key);\r\n    },\r\n    loadFiles(category) {\r\n      // 这里应该是调用后端接口的逻辑，现在只是简单地更新 location\r\n      location.href = '/front/home?category=' + category;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-menu-vertical-demo:not(.el-menu--collapse) {\r\n  width: 200px;\r\n  text-align: left;\r\n}\r\n.category-active {\r\n  color: #409EFF;\r\n}\r\n</style>"],"mappings":"AA6CA,OAAAA,IAAA;AACA,OAAAC,KAAA;AACA,OAAAC,KAAA;AAEA;EACAC,UAAA;IACAH,IAAA;IACAC,KAAA;IACAC;EACA;EACAE,KAAA;IACA;MACAC,YAAA,GACA;QAAA;QAAAC,QAAA;QAAAC,IAAA;MAAA,GACA;QAAA;QAAAD,QAAA;QAAAC,IAAA;MAAA,GACA;QAAA;QAAAD,QAAA;QAAAC,IAAA;MAAA,GACA;QAAA;QAAAD,QAAA;QAAAC,IAAA;MAAA,EACA;MACAC,QAAA;QACA;MAAA,CACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAP,QAAA,OAAAQ,MAAA,CAAAC,KAAA,CAAAT,QAAA;IACA;EACA;;EACAU,QAAA;IACAC,iBAAA;MACA,aAAAX,QAAA;QACA;UACA,OAAAJ,KAAA;QACA;UACA,OAAAD,KAAA;QACA;UACA,OAAAD,IAAA;MACA;IACA;EACA;EACAkB,OAAA;IACAC,WAAAC,GAAA,EAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,eAAAH,GAAA,EAAAC,OAAA;IACA;IACAG,YAAAJ,GAAA,EAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,gBAAAH,GAAA,EAAAC,OAAA;IACA;IACAI,aAAAL,GAAA,EAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,iBAAAH,GAAA,EAAAC,OAAA;MACA,KAAAf,QAAA,GAAAc,GAAA;MACA,KAAAM,SAAA,CAAAN,GAAA;IACA;IACAM,UAAApB,QAAA;MACA;MACAqB,QAAA,CAAAC,IAAA,6BAAAtB,QAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}