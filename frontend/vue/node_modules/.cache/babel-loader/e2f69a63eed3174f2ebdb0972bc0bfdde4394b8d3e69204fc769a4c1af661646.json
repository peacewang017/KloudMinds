{"ast":null,"code":"import Main from \"@/components/Main\";\nimport Trash from \"@/components/Trash\";\nimport Share from \"@/components/Share\";\nexport default {\n  components: {\n    Main,\n    Trash,\n    Share\n  },\n  data() {\n    return {\n      category: this.$route.query.category || 'all',\n      // 默认分类为全部文件\n      typeList: [{\n        text: 'mp3',\n        icon: 'el-icon-mp3'\n      }, {\n        text: 'mp4',\n        icon: 'el-icon-mp4'\n      }, {\n        text: 'jpg',\n        icon: 'el-icon-jpg'\n      }, {\n        text: 'jpeg',\n        icon: 'el-icon-jpeg'\n      }, {\n        text: 'png',\n        icon: 'el-icon-png'\n      }, {\n        text: 'pdf',\n        icon: 'el-icon-pdf'\n      }, {\n        text: 'docx',\n        icon: 'el-icon-docx'\n      }, {\n        text: 'txt',\n        icon: 'el-icon-text'\n      }, {\n        text: 'zip',\n        icon: 'el-icon-zip'\n      }, {\n        text: 'folder',\n        icon: 'el-icon-folder'\n      }],\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  computed: {\n    currentComponent() {\n      const componentMap = {\n        'share': Share,\n        'trash': Trash,\n        'all': Main,\n        'img': Main,\n        'video': Main,\n        'zip': Main\n      };\n      return componentMap[this.category] || Main;\n    }\n  },\n  methods: {\n    handleOpen() {},\n    handleClose() {},\n    handleSelect(key, keyPath) {\n      this.category = key;\n      this.loadFiles(key);\n    },\n    loadFiles(category) {\n      location.href = '/front/home?category=' + category;\n    }\n  }\n};","map":{"version":3,"names":["Main","Trash","Share","components","data","category","$route","query","typeList","text","icon","user","JSON","parse","localStorage","getItem","computed","currentComponent","componentMap","methods","handleOpen","handleClose","handleSelect","key","keyPath","loadFiles","location","href"],"sources":["src/views/front/Home.vue"],"sourcesContent":["<template>\r\n  <div style=\"display: flex; color: #709bc8; height: 100vh;\">\r\n    <el-col :span=\"4\" class=\"sidebar\" style=\"min-height: calc(100vh - 86px); border-right: 1px solid #ddd;\">\r\n\r\n      <el-menu\r\n          default-active=null\r\n          class=\"el-menu-vertical-demo\"\r\n          @open=\"handleOpen\"\r\n          @close=\"handleClose\"\r\n          @select=\"handleSelect\"\r\n          background-color=\"#709bc8\"\r\n          text-color=\"#EBEDDF\"\r\n          active-text-color=\"#ffd04b\"\r\n          style=\"border-right: none;\"\r\n      >\r\n        <!-- 全部文件的下拉列表 -->\r\n        <el-submenu index=\"all\">\r\n          <template slot=\"title\">\r\n            <i class=\"el-icon-menu\" style=\"color:#df9e2d\"></i>\r\n            <span style=\"font-size: 16px;font-weight: bold\">Document</span>\r\n          </template>\r\n          <!-- 下拉列表的选项 -->\r\n          <el-menu-item index=\"all\">\r\n            <i class=\"el-icon-document\"  style=\"color:#fec740\"></i> All Files\r\n          </el-menu-item>\r\n          <el-menu-item index=\"img\">\r\n            <i class=\"el-icon-picture-outline\" style=\"color:#fec740\"></i> Pictures\r\n          </el-menu-item>\r\n          <el-menu-item index=\"video\">\r\n            <i class=\"el-icon-video-play\" style=\"color:#fec740\"></i> Videos\r\n          </el-menu-item>\r\n          <el-menu-item index=\"zip\">\r\n            <i class=\"el-icon-box\" style=\"color:#fec740\"></i> Compressed Files\r\n          </el-menu-item>\r\n        </el-submenu>\r\n        <!-- 我的分享 -->\r\n        <el-menu-item index=\"share\">\r\n          <i class=\"el-icon-share\" style=\"color:#df9e2d\"></i>\r\n          <span slot=\"title\" style=\"font-size: 16px;font-weight: bold\">Share</span>\r\n        </el-menu-item>\r\n        <!-- 回收站 -->\r\n        <el-menu-item index=\"trash\">\r\n          <i class=\"el-icon-delete\" style=\"color:#df9e2d\"></i>\r\n          <span slot=\"title\" style=\"font-size: 16px;font-weight: bold\">Recycle bin</span>\r\n        </el-menu-item>\r\n      </el-menu>\r\n    </el-col>\r\n    <div style=\"flex: 1; padding: 0 20px;\">\r\n      <!-- 根据 category 显示不同的组件 -->\r\n      <component :is=\"currentComponent\" :type-list=\"typeList\" v-if=\"currentComponent\"></component>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Main from \"@/components/Main\";\r\nimport Trash from \"@/components/Trash\";\r\nimport Share from \"@/components/Share\";\r\n\r\nexport default {\r\n  components: {\r\n    Main,\r\n    Trash,\r\n    Share\r\n  },\r\n  data() {\r\n    return {\r\n      category: this.$route.query.category || 'all',  // 默认分类为全部文件\r\n      typeList: [\r\n        { text: 'mp3', icon: 'el-icon-mp3' },\r\n        { text: 'mp4', icon: 'el-icon-mp4' },\r\n        { text: 'jpg', icon: 'el-icon-jpg' },\r\n        { text: 'jpeg', icon: 'el-icon-jpeg' },\r\n        { text: 'png', icon: 'el-icon-png' },\r\n        { text: 'pdf', icon: 'el-icon-pdf' },\r\n        { text: 'docx', icon: 'el-icon-docx' },\r\n        { text: 'txt', icon: 'el-icon-text' },\r\n        { text: 'zip', icon: 'el-icon-zip' },\r\n        { text: 'folder', icon: 'el-icon-folder' },\r\n\r\n      ],\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n    };\r\n  },\r\n  computed: {\r\n    currentComponent() {\r\n      const componentMap = {\r\n        'share': Share,\r\n        'trash': Trash,\r\n        'all': Main,\r\n        'img': Main,\r\n        'video': Main,\r\n        'zip': Main,\r\n      };\r\n      return componentMap[this.category] || Main;\r\n    }\r\n  },\r\n  methods: {\r\n    handleOpen() {},\r\n    handleClose() {},\r\n    handleSelect(key, keyPath) {\r\n      this.category = key;\r\n      this.loadFiles(key);\r\n    },\r\n    loadFiles(category) {\r\n      location.href = '/front/home?category=' + category;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-menu-vertical-demo:not(.el-menu--collapse) {\r\n  width: 100%;\r\n}\r\n.category-active {\r\n  color: #409EFF;\r\n}\r\n.sidebar {\r\n  width: 200px;\r\n}\r\n\r\ndiv {\r\n  /* 设置整个div的高度为视口的100% */\r\n  height: 100vh;\r\n  /* 设置背景颜色为黑色 */\r\n  background-color: black;\r\n  /* 设置一个覆盖层，用于在左边创建白色背景区域 */\r\n  position: relative;\r\n}\r\n\r\ndiv::before {\r\n  /* 创建一个伪元素，它是块级或内联块级元素 */\r\n  content: \"\";\r\n  display: block;\r\n  /* 设置伪元素的背景颜色为白色 */\r\n  background-color: white;\r\n  /* 设置伪元素的宽度为200px */\r\n  width: 100px;\r\n  /* 设置伪元素的高度为与父元素相同 */\r\n  height: 100%;\r\n  /* 将伪元素定位到左边 */\r\n  position: absolute;\r\n  left: 0;\r\n  /* 如果需要，还可以设置伪元素的z-index */\r\n  z-index: 1;\r\n}\r\n\r\n</style>"],"mappings":"AAuDA,OAAAA,IAAA;AACA,OAAAC,KAAA;AACA,OAAAC,KAAA;AAEA;EACAC,UAAA;IACAH,IAAA;IACAC,KAAA;IACAC;EACA;EACAE,KAAA;IACA;MACAC,QAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,QAAA;MAAA;MACAG,QAAA,GACA;QAAAC,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,IAAA;MAAA,EAEA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,iBAAA;MACA,MAAAC,YAAA;QACA,SAAAhB,KAAA;QACA,SAAAD,KAAA;QACA,OAAAD,IAAA;QACA,OAAAA,IAAA;QACA,SAAAA,IAAA;QACA,OAAAA;MACA;MACA,OAAAkB,YAAA,MAAAb,QAAA,KAAAL,IAAA;IACA;EACA;EACAmB,OAAA;IACAC,WAAA;IACAC,YAAA;IACAC,aAAAC,GAAA,EAAAC,OAAA;MACA,KAAAnB,QAAA,GAAAkB,GAAA;MACA,KAAAE,SAAA,CAAAF,GAAA;IACA;IACAE,UAAApB,QAAA;MACAqB,QAAA,CAAAC,IAAA,6BAAAtB,QAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}