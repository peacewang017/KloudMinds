@startuml kubernetes

footer Kubernetes Plant-UML
scale max 1024 width

skinparam nodesep 10
skinparam ranksep 10
skinparam linetype ortho

' Kubernetes
!define KubernetesPuml https://raw.githubusercontent.com/dcasati/kubernetes-PlantUML/master/dist

!includeurl KubernetesPuml/kubernetes_Common.puml
!includeurl KubernetesPuml/kubernetes_Context.puml
!includeurl KubernetesPuml/kubernetes_Simplified.puml

!includeurl KubernetesPuml/OSS/KubernetesPod.puml
!includeurl KubernetesPuml/OSS/KubernetesSvc.puml
!includeurl KubernetesPuml/OSS/KubernetesIng.puml
!includeurl KubernetesPuml/OSS/KubernetesPvc.puml
!includeurl KubernetesPuml/OSS/KubernetesHpa.puml

actor user as KubernetesUser

left to right direction

' Kubernetes Components
Cluster_Boundary(cluster, "Kubernetes Cluster") {
    
    Namespace_Boundary(frontend, "Frontend") {
        KubernetesPod(webAppPod, "Web App Pod", "")
    }

    Namespace_Boundary(backend, "Backend Services") {
        KubernetesPod(apiServicePod, "API Service Pod", "")
        KubernetesPod(authServicePod, "Auth Service Pod", "")
        KubernetesPod(fileProcessingPod, "File Processing Service Pod", "")
        KubernetesPod(ragRetrievalPod, "RAG Retrieval Pod", "")
        KubernetesPod(aiGenerationPod, "AI Generation Pod", "")
        KubernetesPod(messageQueuePod, "Message Queue Pod (RabbitMQ)", "")
        KubernetesPod(vectorDBPod, "Vector Database Pod (Weaviate)", "")
    }

    Namespace_Boundary(persistentStorage, "Persistent Storage") {
        KubernetesPvc(pvc, "Persistent Volume Claim", "")
    }

    Namespace_Boundary(storage, "Storage") {
        KubernetesPod(objectStorage, "Object Storage (MinIO)", "")
        KubernetesPod(metadataDB, "Metadata DB (MySQL)", "")
    }

    Namespace_Boundary(security, "Security") {
        KubernetesPod(secretsConfigMaps, "Secrets/ConfigMaps", "")
    }

    Namespace_Boundary(monitoringLogging, "Monitoring & Logging") {
        KubernetesPod(prometheus, "Prometheus", "")
        KubernetesPod(grafana, "Grafana", "")
    }

    Namespace_Boundary(scalability, "Scalability") {
        KubernetesHpa(hpa, "Horizontal Pod Autoscaler", "")
    }

    KubernetesIng(ingress, "Ingress", "")

    ingress --> webAppPod
    webAppPod --> apiServicePod
    apiServicePod --> authServicePod
    apiServicePod --> fileProcessingPod
    apiServicePod --> ragRetrievalPod
    apiServicePod --> messageQueuePod
    apiServicePod --> vectorDBPod
    ragRetrievalPod --> aiGenerationPod
    fileProcessingPod --> objectStorage
    fileProcessingPod --> messageQueuePod
    fileProcessingPod --> vectorDBPod
    apiServicePod --> metadataDB
    metadataDB --> pvc
    pvc --> objectStorage
    secretsConfigMaps --> authServicePod
    prometheus --> grafana
    hpa --> apiServicePod
    hpa --> fileProcessingPod
    hpa --> ragRetrievalPod
    hpa --> aiGenerationPod
}

user --> ingress : Uses

@enduml
